services:
  user-service:
    build:
      context: .
      dockerfile: ./user-service/User_Dockerfile
    ports:
      - "8081:8081"
    networks:
      - app-network
    command: /bin/bash -c "until nc -z database 3306; do echo 'Waiting for MySQL...'; sleep 2; done && /app/main"
    environment:
      - SMTP_USER=avengersenemysg@gmail.com
      - SMTP_PASS=your-app-specific-password
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=465  # or 587 if you're using TLS
  game-service:
    build:
      context: .
      dockerfile: ./game-service/Game_Dockerfile
    ports:
      - "8083:8083"
    networks:
      - app-network
    command: /bin/bash -c "until nc -z database 3306; do echo 'Waiting for MySQL...'; sleep 2; done && /app/main"

  assessment-service:
    build:
      context: .
      dockerfile: ./assessment-service/Assessment_Dockerfile
    ports:
      - "8082:8082"
    networks:
      - app-network
    command: /bin/bash -c "until nc -z database 3306; do echo 'Waiting for MySQL...'; sleep 2; done && /app/main"

  frontend:
    build:
      context: .
      dockerfile: ./Frontend/Frontend_Dockerfile
    ports:
      - "8080:8080"
    restart: always
    networks:
      - app-network
    volumes:
    - ./Frontend:/usr/share/nginx/html  # Mount the frontend directory
    depends_on:
    - user-service
    - database

  database:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: elderly
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    networks:
      - app-network
    volumes:
      - ./sql:/docker-entrypoint-initdb.d

networks:
  app-network:
